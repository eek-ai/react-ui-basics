{"version":3,"file":"main.5a215d7539078ed40ea7.bundle.js","sources":["webpack:///./src/react-ui-basics/Tools.js"],"sourcesContent":["export function classNames() {\n    const filtered = [];\n    const length = arguments.length;\n    for (let i = 0; i < length; i++) {\n        let it = arguments[i];\n        !!it && filtered.push(it);\n    }\n    return filtered.join(' ');\n}\n\nexport const NOOP = () => {\n};\n\nexport const orNoop = f => f || NOOP;\n\nexport const getRandomId = (prefix) => prefix + Math.random();\n\nexport const ref = (name, component) => (it) => component[name] = it;\n\nexport const setOf = (list) => (list || []).reduce((map, key) => {\n    map[key] = true;\n    return map;\n}, {});\n\nexport const allPropsExcept = (obj, except) => {\n    let result = {};\n    for (let key in obj) {\n        if (!except[key]) result[key] = obj[key];\n    }\n    return result;\n};\n\nexport const continuousIncludes = (value, inc) => {\n    const length = inc.length;\n    let from = 0;\n    for (let i = 0; i < length; i++) {\n        from = value.indexOf(inc[i], from);\n        if (from === -1)\n            return false\n    }\n    return true;\n};\n\nexport const isHappenedInside = (e, el) => {\n    let currentElem = e.target;\n    while (currentElem) {\n        if (currentElem === el)\n            return true;\n        currentElem = currentElem.parentElement;\n    }\n    return false;\n};\n\nexport const isDifferent = (a, b) => {\n    if (a == null && b == null) return false;\n    if (a == null || b == null) return true;\n\n    const typeA = typeof a;\n    const typeB = typeof b;\n    if (typeA !== typeB) {\n        return true;\n    }\n\n    if (Array.isArray(a)) {\n        if (a.length !== b.length) {\n            return true;\n        }\n        let i = a.length - 1;\n        let result = false;\n        while (i >= 0 && !(result = isDifferent(a[i], b[i]))) {\n            i--;\n        }\n        return result;\n    }\n\n    if (typeA === 'object') {\n        const keysA = Object.keys(a);\n        const keysB = Object.keys(b);\n        if (keysA.length !== keysB.length) {\n            return true;\n        }\n\n        let j = keysA.length - 1;\n        let r = false;\n        while (j >= 0 && !(r = keysA[j] !== keysB[j]) && !(r = isDifferent(a[keysA[j]], b[keysB[j]]))) {\n            j--;\n        }\n        return r\n    }\n\n    return a !== b;\n};\n\nexport const preventDefault = e => e && e.preventDefault();\nexport const stopPropagation = e => e && e.stopPropagation();"],"mappings":"AAAA","sourceRoot":""}